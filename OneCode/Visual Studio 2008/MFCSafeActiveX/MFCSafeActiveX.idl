// MFCSafeActiveX.idl : type library source for ActiveX Control project.

// This file will be processed by the MIDL compiler tool to
// produce the type library (MFCSafeActiveX.tlb) that will become a resource in
// MFCSafeActiveX.ocx.

#include <olectl.h>
#include <idispids.h>

[ uuid(098DB52D-2AAE-499B-B959-A430BA0FF357), version(1.0),
  helpfile("MFCSafeActiveX.hlp"),
  helpstring("MFCSafeActiveX ActiveX Control module"),
  control ]
library MFCSafeActiveXLib
{
	importlib(STDOLE_TLB);

	//  Primary dispatch interface for CMFCSafeActiveXCtrl

	[ uuid(6267760D-4EDC-430A-A94F-1181971ABA02),
	  helpstring("Dispatch interface for MFCSafeActiveX Control")]
	dispinterface _DMFCSafeActiveX
	{
		properties:
			[id(2), helpstring("property FloatProperty")] FLOAT FloatProperty;
	methods:
			[id(1), helpstring("method HelloWorld")] BSTR HelloWorld(void);
			[id(3), helpstring("method GetProcessThreadID")] void GetProcessThreadID(LONG* pdwProcessId, LONG* pdwThreadId);
	};

	//  Event dispatch interface for CMFCSafeActiveXCtrl

	[ uuid(050C9E59-ADA3-440A-92B4-59AE97009569),
	  helpstring("Event interface for MFCSafeActiveX Control") ]
	dispinterface _DMFCSafeActiveXEvents
	{
		properties:
			//  Event interface has no properties

		methods:
			[id(1)] void FloatPropertyChanging(FLOAT NewValue, VARIANT_BOOL* Cancel);
	};

	//  Class information for CMFCSafeActiveXCtrl

	[ uuid(1EBAE592-7515-43C2-A6F1-CDEEDF3FD82B), licensed,
	  helpstring("MFCSafeActiveX Control"), control ]
	coclass MFCSafeActiveX
	{
		[default] dispinterface _DMFCSafeActiveX;
		[default, source] dispinterface _DMFCSafeActiveXEvents;
	};

};
