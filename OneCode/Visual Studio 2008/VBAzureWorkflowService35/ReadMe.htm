<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>ReadMe</title>
	<style type="text/css">
		H2
		{
			color: #003399;
			font-size: 125%;
		}
		
		H3
		{
			color: #0033DD;
			font-size: 110%;
		}
	</style>
</head>
<body>
	<h2>
		Overview</h2>
	<p>
		This sample demonstrates how to run a WCF Workflow Service on Windows Azure. It 
		uses Visual Studio 2008 and WF 3.5.</p>
	<p>
		While currently Windows Azure platform AppFabric does not contain a Workflow 
		Service component, you can run WCF Workflow Services directly in a Windows Azure 
		Web Role. By default, a Web Role runs under full trust, so it supports the 
		workflow environment.</p>
	<p>
		The workflow in this sample contains a single ReceiveActivity. It compares the 
		service operation&#39;s parameter&#39;s value with 20, and returns &quot;You&#39;ve entered a 
		small value.&quot; and &quot;You&#39;ve entered a large value.&quot;, respectively. The client 
		application invokes the Workflow Service twice, passing a value less than 20, 
		and a value grater than 20, respectively.</p>
	<h2>
		Prerequests</h2>
	<p>
		For this sample to work, you must install the Windows Azure SDK and the Windows
		Azure Tools for Visual Studio. This sample works on the local Developer Fabric
		(included in the Windows Azure SDK) and also in the Windows Azure cloud service.
		To run the sample in the cloud service, you must also have a valid Windows Azure
		account. More information about Windows Azure can be found here:
		<a href="http://msdn.microsoft.com/en-us/library/dd179367.aspx">
		http://msdn.microsoft.com/en-us/library/dd179367.aspx</a>. Please note that the Windows Azure SDK also has
		a number of its own pre-requisites (including IIS and SQL Server).</p>
	<h2>
		Running the Sample</h2>
	<p>
		You must start Visual Studio in elevated (administrator) mode. Right-click on Visual
		Studio and then click Run as Administrator. This is required by the Windows Azure
		simulation environment.</p>
	<p>
		Configure the app.config file for the the Client application:</p>
	<p>
					<!-- Modify address if you host the workflow service in the cloud, or if your Development Fabric is not listening on port 81. -->
            <endpoint address="http://127.0.0.1:81/ProcessDataWorkflowService.svc"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IProcessDataWorkflow"
                contract="WorkflowServiceReference.IProcessDataWorkflow" name="BasicHttpBinding_IProcessDataWorkflow" />
					<!-- Modify address if you host the workflow service in the cloud, or if your Development Fabric is not listening on port 81. -->
            <endpoint address="http://127.0.0.1:81/ProcessDataWorkflowService.svc"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IProcessDataWorkflow"
                contract="WorkflowServiceReference.IProcessDataWorkflow" name="BasicHttpBinding_IProcessDataWorkflow" />
					<!-- Modify address if you host the workflow service in the cloud, or if your Development Fabric is not listening on port 81. -->
            <endpoint address="http://127.0.0.1:81/ProcessDataWorkflowService.svc"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IProcessDataWorkflow"
                contract="WorkflowServiceReference.IProcessDataWorkflow" name="BasicHttpBinding_IProcessDataWorkflow" />
					<!-- Modify address if you host the workflow service in the cloud, or if your Development Fabric is not listening on port 81. -->
            <span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue;mso-no-proof:yes">
		<span style="mso-tab-count:5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		</span>&lt;!--</span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;;color:green;mso-no-proof:
yes"> Modify address if you host the Workflow Service in the cloud, or if your 
		Development Fabric is not listening on port 81. </span>
		<span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue;mso-no-proof:yes">--&gt;<o:p></o:p></span></p>
	<p class="MsoNormal">
		<span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue;mso-no-proof:yes">
		<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		</span>&lt;</span><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:#A31515;mso-no-proof:yes">endpoint</span><span 
			style="font-size:10.0pt;font-family:&quot;Courier New&quot;;color:blue;mso-no-proof:yes">
		</span>
		<span style="font-size:10.0pt;font-family:&quot;Courier New&quot;;color:red;
mso-no-proof:yes">address</span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;;
color:blue;mso-no-proof:yes">=</span><span style="font-size:10.0pt;font-family:
&quot;Courier New&quot;;mso-no-proof:yes">&quot;<span style="color:blue">http://127.0.0.1:81/ProcessDataWorkflowService.svc</span>&quot;<o:p></o:p></span></p>
	<p class="MsoNormal">
		<span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue;mso-no-proof:yes">
		<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		</span></span>
		<span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:red;mso-no-proof:yes">binding</span><span 
			style="font-size:10.0pt;font-family:&quot;Courier New&quot;;color:blue;mso-no-proof:yes">=</span><span 
			style="font-size:10.0pt;font-family:&quot;Courier New&quot;;mso-no-proof:yes">&quot;<span 
			style="color:blue">basicHttpBinding</span>&quot;<span style="color:blue"> </span>
		<span style="color:red">bindingConfiguration</span><span style="color:blue">=</span>&quot;<span 
			style="color:blue">BasicHttpBinding_IProcessDataWorkflow</span>&quot;<o:p></o:p></span></p>
	<p class="MsoNormal">
		<span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue;mso-no-proof:yes">
		<span style="mso-spacerun:yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		</span></span>
		<span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:red;mso-no-proof:yes">contract</span><span 
			style="font-size:10.0pt;font-family:&quot;Courier New&quot;;color:blue;mso-no-proof:yes">=</span><span 
			style="font-size:10.0pt;font-family:&quot;Courier New&quot;;mso-no-proof:yes">&quot;<span 
			style="color:blue">WorkflowServiceReference.IProcessDataWorkflow</span>&quot;<span 
			style="color:blue"> </span><span style="color:red">name</span><span 
			style="color:blue">=</span>&quot;<span style="color:blue">BasicHttpBinding_IProcessDataWorkflow</span>&quot;<span 
			style="color:blue"> /&gt;</span></span><endpoint address="http://127.0.0.1:81/ProcessDataWorkflowService.svc"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IProcessDataWorkflow"
                contract="WorkflowServiceReference.IProcessDataWorkflow" name="BasicHttpBinding_IProcessDataWorkflow" /></p>
	<p>
		Then run the VBAZWorkflowService35 project in the Windows
		Azure local Developer Fabric or package and deploy the solution to the Windows Azure
		service. For more information about running Windows Azure applications locally or
		in the cloud please refer to the Windows Azure documentation at 
		<a href="http://msdn.microsoft.com/en-us/library/ee405484.aspx">
		http://msdn.microsoft.com/en-us/library/ee405484.aspx</a>.</p>
	<p>
		Finally, run the Client project to verify the workflow service works properly.</p>
	<h2>
		Description</h2>
	<p>
		The sample solution contains 4 projects.</p>
	<h3>
		VBAZWorkflowService35</h3>
	<p>
		The cloud service project. When testing in Development Fabric, please make sure 
		to run this project instead of the WorkflowServiceWebRole project.</p>
	<h3>
		WorkflowServiceWebRole</h3>
	<p>
		The Web Role project. It is a normal ASP.NET project that hosts a WCF Workflow 
		Service. Hosting a Workflow Service in Windows Azure is the same as hosting in 
		IIS. The WorkflowServiceHostFactory handles all the work for you.</p>
	<p class="MsoNormal">
		<span style="font-size: 10.0pt; line-height: 115%; font-family: &quot;Courier New&quot;; background: yellow; mso-highlight: yellow; mso-no-proof: yes">
		&lt;%</span><span style="font-size:10.0pt;line-height:115%;font-family:&quot;Courier New&quot;;color:blue;
mso-no-proof:yes">@</span><span style="font-size:10.0pt;line-height:115%;
font-family:&quot;Courier New&quot;;color:#A31515;mso-no-proof:yes">ServiceHost</span><span style="font-size:10.0pt;line-height:115%;font-family:&quot;Courier New&quot;;mso-no-proof:
yes"> <span style="color:red">language</span><span style="color:blue">=&quot;VB&quot;</span>
		<span style="color:red">Debug</span><span style="color:blue">=&quot;true&quot;</span>
		<span style="color:red">Service</span><span style="color:blue">=&quot;WFServiceLibrary.ProcessDataWorkflowService&quot;</span>
		<span style="color:red">Factory</span><span style="color:blue">=&quot;System.ServiceModel.Activation.WorkflowServiceHostFactory&quot;</span>
		<span style="background: yellow; mso-highlight: yellow">%&gt;</span></span><o:p></o:p></p>
	<p>
		There&#39;s also nothing special about configuration. For this sample, we&#39;ll use 
		BasicHttpBinding.</p>
	<h3>
		WFServiceLibrary</h3>
	<p>
		A standard WFServiceLibrary project, where the actual workflow is composed. 
		Please note WF 4 has a much more sophisticated programming model compared to WF 
		3.5. So it is recommended to use WF 4&#39;s new programming model for new 
		developments. However, currently Windows Azure only supports .NET 3.5. To make 
		it easier to migrate to WF 4 in the future, this sample takes the XOML approach 
		rather than the code only approach.</p>
	<h3>
		Client</h3>
	<p>
		A console client application that invokes the WCF Workflow Service.</p>
</body>
</html>
