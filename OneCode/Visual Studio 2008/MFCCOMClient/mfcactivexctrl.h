#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CMFCActiveXCtrl wrapper class

class CMFCActiveXCtrl : public CWnd
{
protected:
	DECLARE_DYNCREATE(CMFCActiveXCtrl)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xE389AD6C, 0x4FB6, 0x47AF, { 0xB0, 0x3A, 0xA5, 0xA5, 0xC6, 0xB2, 0xB8, 0x20 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:


// Operations
public:

// _DMFCActiveX

// Functions
//

	CString HelloWorld()
	{
		CString result;
		InvokeHelper(0x1, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
		return result;
	}

// Properties
//

float GetFloatProperty()
{
	float result;
	GetProperty(0x2, VT_R4, (void*)&result);
	return result;
}
void SetFloatProperty(float propVal)
{
	SetProperty(0x2, VT_R4, propVal);
}


};
