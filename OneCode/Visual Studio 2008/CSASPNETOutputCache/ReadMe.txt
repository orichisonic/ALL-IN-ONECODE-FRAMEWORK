========================================================================
   ASP.NET web application project : CSASPNETOutputCache OverView
========================================================================

/////////////////////////////////////////////////////////////////////////////
Use:

ASP.NET Page OutputCache is used to cache the response generated by ASP.NET
page or user control, and it makes web application faster. In this demo, 
we use @OutputCache's Duration, VaryByCustom, VaryByParam, VaryByControl 
attributes to cache output of page.

Note: The Duration attribute is required in every @OutputCache directive.

In this case, we use datetime to determine whether page is cached.

/////////////////////////////////////////////////////////////////////////////
Project Relation:

None

/////////////////////////////////////////////////////////////////////////////
Code Logic:

1. Demonstrate the Duration attribute on OutputCacheWithDuration.aspx page:
   #. Add @OutputCache in .aspx markup and specify the expiration time.
      In this case, we assign 10s for it. For example:
      <%@ OutputCache Duration="10" VaryByParam="none" %>
   #. Run ASP.NET web application and launch this page, and we will see that 
      the datetime on page won't changed 10s when page is reloading.

2. Demonstrate the VaryByControl attribute on OutputCacheWithControl.aspx:
   #. Drag and drop DropDownList in page and add three items to it.
   #. Add @OutputCache in .aspx markup and specify the expiration time
      and VaryByControl attribute. For example:
      <%@ OutputCache Duration="1000" VaryByControl="ddlOption" %>
   #. Run ASP.NET web application and launch this page, we can see that 
   different item has corresponding cache.
      
3. Demonstrate the VaryByCustom attribute on OutputCacheWithCustom.aspx page:
   #. Add @OutputCache in .aspx markup and specify the expiration time
      and VaryByControl attribute with "browser" value. For example:
     <%@OutputCache Duration="1000"VaryByCustom="browser"VaryByParam="none"%>
   #. Run ASP.NET web application and launch this page with IE and FireFox 
     (or browser with different name, major version ), and we will see that 
      there is different cache version for different browser.
      
4. Demonstrate the VaryByParam attribute on OutputCacheWithParam.aspx page:
   #. Add @OutputCache in .aspx markup and specify the expiration time
      and VaryByParam attribute with "id" value. For example:
      <%@ OutputCache Duration="1000" VaryByParam="id" %>
   #. Run ASP.NET web application and launch this page, and we can request it 
   using QueryString "id" with different value. For example:
   ~/OutputCacheWithParam.aspx?id=1
   ~/OutputCacheWithParam.aspx?id=2


/////////////////////////////////////////////////////////////////////////////
References:

@ OutputCache
http://msdn.microsoft.com/en-us/library/hdxfb6cy.aspx

ASP.NET Caching
http://msdn.microsoft.com/en-us/library/xsbfdd8c.aspx



/////////////////////////////////////////////////////////////////////////////