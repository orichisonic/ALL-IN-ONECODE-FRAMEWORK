// ATLActiveX.idl : IDL source for ATLActiveX
//

// This file will be processed by the MIDL tool to
// produce the type library (ATLActiveX.tlb) and marshalling code.

#include "olectl.h"
import "oaidl.idl";
import "ocidl.idl";

[
    object,
    uuid(299F0541-E940-450C-8726-DC3C1E5A2421),
    dual,
    nonextensible,
    helpstring("IATLActiveXCtrl Interface"),
    pointer_default(unique)
]
interface IATLActiveXCtrl : IDispatch{
    [propput, bindable, requestedit, id(DISPID_BACKCOLOR)]
    HRESULT BackColor([in]OLE_COLOR clr);
    [propget, bindable, requestedit, id(DISPID_BACKCOLOR)]
    HRESULT BackColor([out,retval]OLE_COLOR* pclr);
    [propput, bindable, requestedit, id(DISPID_ENABLED)]
    HRESULT Enabled([in]VARIANT_BOOL vbool);
    [propget, bindable, requestedit, id(DISPID_ENABLED)]
    HRESULT Enabled([out,retval]VARIANT_BOOL* pbool);
    [propget, id(1), helpstring("property FloatProperty")] HRESULT FloatProperty([out, retval] FLOAT* pVal);
    [propput, id(1), helpstring("property FloatProperty")] HRESULT FloatProperty([in] FLOAT newVal);
    [id(2), helpstring("method HelloWorld")] HRESULT HelloWorld([out,retval] BSTR* pRet);
    [id(3), helpstring("method GetProcessThreadID")] HRESULT GetProcessThreadID([out] LONG* pdwProcessId, [out] LONG* pdwThreadId);
};

[
    uuid(3A5B4610-4796-4C96-BEB5-AA1B83198B9A),
    version(1.0),
    helpstring("ATLActiveX 1.0 Type Library")
]
library ATLActiveXLib
{
    importlib("stdole2.tlb");
    [
        uuid(DF48D1B5-FFE2-42A1-8E66-D3B96E16A9B4),
        helpstring("_IATLActiveXCtrlEvents Interface")
    ]
    dispinterface _IATLActiveXCtrlEvents
    {
    properties:
    methods:
        [id(1), helpstring("method FloatPropertyChanging")] void FloatPropertyChanging([in] FLOAT NewValue, [in,out] VARIANT_BOOL* Cancel);
    };
    [
        uuid(5A5C9ED1-ECC2-47F7-8015-A304D0DB8EF8),
        control,
        licensed,
        helpstring("ATLActiveXCtrl Class")
    ]
    coclass ATLActiveXCtrl
    {
        [default] interface IATLActiveXCtrl;
        [default, source] dispinterface _IATLActiveXCtrlEvents;
    };
};
